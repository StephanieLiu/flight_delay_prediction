worker_processes auto;
events {
    worker_connections 1024;
    # Performance tuning for Linux
    use epoll;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    server_tokens off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout  main;
    error_log   /dev/stderr warn;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    resolver 127.0.0.11 valid=5s ipv6=off;
    resolver_timeout 10s;

    #########################################
    # Client
    #########################################
    # A server listening on port 80 that upgrades to HTTPS
    server {
        listen 80;

        server_name ${PARTICIPANT_STR}.labs.ivamlops.ca;
        return 301 https://$host$request_uri;
    }

    # A server listening on port 443 that proxies to the "client" service
    server {
        listen 443 ssl http2;

        server_name ${PARTICIPANT_STR}.labs.ivamlops.ca;

        # TODO: Find auth method

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;


        # ----------- START - Vouch -----------
        include /etc/nginx/nginx-ingress-vouch.conf;
        # ----------- END - Vouch -----------


        location / {
            proxy_pass http://client:8501;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Websockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

        }
    }

    #########################################
    # MLFlow
    #########################################
    # A server listening on port 80 that upgrades to HTTPS
    server {
        listen 80;

        server_name mlflow.${PARTICIPANT_STR}.labs.ivamlops.ca;
        return 301 https://$host$request_uri;
    }

    # A server listening on port 443 that proxies to the "mlflow" service
    server {
        listen 443 ssl http2;

        server_name mlflow.${PARTICIPANT_STR}.labs.ivamlops.ca;

        # TODO: Find auth method

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;


        # ----------- START - Vouch -----------
        # include /etc/nginx/nginx-ingress-vouch.conf;
        # ----------- END - Vouch -----------


        location / {
            proxy_pass http://mlflow:7000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Websockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

        }
        # set client body size to 100 MB #
        client_max_body_size 100M;
    }
    #########################################
    # MinIO
    #########################################
    server {
        listen 80;
        server_name minio.${PARTICIPANT_STR}.labs.ivamlops.ca;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name minio.${PARTICIPANT_STR}.labs.ivamlops.ca;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        # ----------- START - Vouch -----------
        # include /etc/nginx/nginx-ingress-vouch.conf;
        # ----------- END - Vouch -----------

        # Allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # Disable buffering
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            proxy_pass http://minio:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ui/ {
            rewrite ^/ui/(.*) /$1 break;

            proxy_pass http://minio:9443;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;


            # https://min.io/docs/minio/linux/integrations/setup-nginx-proxy-with-minio.html
            # This is necessary to pass the correct IP to be hashed
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;
            # To support websockets in MinIO versions released after January 2023
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress)
            # Uncomment the following line to set the Origin request to an empty string
            # proxy_set_header Origin '';

            chunked_transfer_encoding off;
        }
    }

    #########################################
    # Vouch Proxy
    #########################################
    server {
        listen 443 ssl http2;
        server_name vouch.${PARTICIPANT_STR}.labs.ivamlops.ca;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass http://vouch:9090;
            proxy_set_header Host $host;
            # Unsure if these are necessary:
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
